{"ast":null,"code":"import React from 'react';\nimport { Path } from 'react-native-svg';\nimport { INNER_EYE_SIZE_IN_BITS, OUTER_EYE_SIZE_IN_BITS } from \"../constants\";\nimport { getInnerEyePathData, getOuterEyePathData, getPieceLiquidPathData, getPieceRoundedSquarePathData, getPieceSquarePathData, getRoundedInnerEyePathData, getRoundedOuterEyePathData, isCoordsOfInnerEyes, isCoordsOfOuterEyes, isLiquidPieceInEyes, transformBorderRadiusToArray } from \"../helpers\";\nexport var DEFAULT_PIECE_SIZE = 5;\nexport default function SVGPieces(_ref) {\n  var bitMatrix = _ref.bitMatrix,\n    _ref$pieceLiquidRadiu = _ref.pieceLiquidRadius,\n    pieceLiquidRadius = _ref$pieceLiquidRadiu === void 0 ? 0 : _ref$pieceLiquidRadiu,\n    pieceBorderRadius = _ref.pieceBorderRadius,\n    _ref$pieceSize = _ref.pieceSize,\n    pieceSize = _ref$pieceSize === void 0 ? DEFAULT_PIECE_SIZE : _ref$pieceSize,\n    pieceCornerType = _ref.pieceCornerType,\n    pieceScale = _ref.pieceScale,\n    pieceRotation = _ref.pieceRotation,\n    pieceStroke = _ref.pieceStroke,\n    pieceStrokeWidth = _ref.pieceStrokeWidth,\n    outerEyesOptions = _ref.outerEyesOptions,\n    innerEyesOptions = _ref.innerEyesOptions,\n    _ref$isPiecesGlued = _ref.isPiecesGlued,\n    isPiecesGlued = _ref$isPiecesGlued === void 0 ? false : _ref$isPiecesGlued,\n    renderCustomPieceItem = _ref.renderCustomPieceItem,\n    logoArea = _ref.logoArea;\n  if (!bitMatrix || !bitMatrix[0]) {\n    return null;\n  }\n  var qrSize = bitMatrix.length * pieceSize;\n  var svgPiecesMatrix = [];\n  if (renderCustomPieceItem) {\n    for (var y = 0; y < bitMatrix.length; y++) {\n      for (var x = 0; x < bitMatrix.length; x++) {\n        var PieceElement = renderCustomPieceItem({\n          x: x,\n          y: y,\n          pieceSize: pieceSize,\n          qrSize: qrSize,\n          bitMatrix: bitMatrix\n        });\n        if (PieceElement) {\n          svgPiecesMatrix.push(PieceElement);\n        }\n      }\n    }\n    return React.createElement(React.Fragment, null, svgPiecesMatrix);\n  }\n  var transformedPieceBorderRadius = transformBorderRadiusToArray(pieceBorderRadius);\n  for (var _y2 = 0; _y2 < bitMatrix.length; _y2++) {\n    for (var _x2 = 0; _x2 < bitMatrix.length; _x2++) {\n      var _bitMatrix$y;\n      if (logoArea) {\n        var _x = _x2 * pieceSize;\n        var _y = _y2 * pieceSize;\n        if (logoArea.x < _x + pieceSize && logoArea.x + logoArea.width > _x && logoArea.y < _y + pieceSize && logoArea.y + logoArea.height > _y) {\n          continue;\n        }\n      }\n      if (((_bitMatrix$y = bitMatrix[_y2]) === null || _bitMatrix$y === void 0 ? void 0 : _bitMatrix$y[_x2]) === 1) {\n        var origin = \"\\n          \" + (_x2 * pieceSize + pieceSize / 2) + \",\\n          \" + (_y2 * pieceSize + pieceSize / 2);\n        var d = getPieceSquarePathData(_x2, _y2, pieceSize);\n        if (transformedPieceBorderRadius) {\n          d = getPieceRoundedSquarePathData({\n            x: _x2,\n            y: _y2,\n            size: pieceSize,\n            cornerType: pieceCornerType,\n            borderRadius: transformedPieceBorderRadius,\n            isGlued: isPiecesGlued,\n            isLiquid: !!pieceLiquidRadius,\n            bitMatrix: bitMatrix\n          });\n        }\n        var PathComponent = React.createElement(Path, {\n          scale: pieceScale,\n          rotation: pieceRotation,\n          origin: origin,\n          stroke: pieceStroke,\n          strokeWidth: pieceStrokeWidth,\n          key: _x2 + \"_\" + _y2,\n          d: d\n        });\n        if (outerEyesOptions || innerEyesOptions) {\n          if (outerEyesOptions && !innerEyesOptions && !isCoordsOfOuterEyes(_x2, _y2, bitMatrix.length) || !outerEyesOptions && innerEyesOptions && !isCoordsOfInnerEyes(_x2, _y2, bitMatrix.length) || innerEyesOptions && !isCoordsOfInnerEyes(_x2, _y2, bitMatrix.length) && outerEyesOptions && !isCoordsOfOuterEyes(_x2, _y2, bitMatrix.length)) {\n            svgPiecesMatrix.push(PathComponent);\n          }\n        } else {\n          svgPiecesMatrix.push(PathComponent);\n        }\n      } else {\n        if (pieceLiquidRadius) {\n          if (outerEyesOptions && !isLiquidPieceInEyes(_x2, _y2, bitMatrix.length) || !outerEyesOptions) {\n            var _bitMatrix$y2, _bitMatrix, _bitMatrix$y3, _bitMatrix2, _bitMatrix$y4, _bitMatrix3, _bitMatrix$y5, _bitMatrix4;\n            var _d = getPieceLiquidPathData(_x2, _y2, pieceSize, pieceLiquidRadius);\n            var _origin = \"\\n            \" + (_x2 * pieceSize + pieceSize / 2) + \",\\n            \" + (_y2 * pieceSize + pieceSize / 2);\n            if (((_bitMatrix$y2 = bitMatrix[_y2]) === null || _bitMatrix$y2 === void 0 ? void 0 : _bitMatrix$y2[_x2 - 1]) === 1 && ((_bitMatrix = bitMatrix[_y2 - 1]) === null || _bitMatrix === void 0 ? void 0 : _bitMatrix[_x2]) === 1) {\n              svgPiecesMatrix.push(React.createElement(Path, {\n                key: _x2 + \"_\" + _y2 + \"_topLeft\",\n                d: _d\n              }));\n            }\n            if (((_bitMatrix$y3 = bitMatrix[_y2]) === null || _bitMatrix$y3 === void 0 ? void 0 : _bitMatrix$y3[_x2 - 1]) === 1 && ((_bitMatrix2 = bitMatrix[_y2 + 1]) === null || _bitMatrix2 === void 0 ? void 0 : _bitMatrix2[_x2]) === 1) {\n              svgPiecesMatrix.push(React.createElement(Path, {\n                rotation: -90,\n                origin: _origin,\n                key: _x2 + \"_\" + _y2 + \"_topRight\",\n                d: _d\n              }));\n            }\n            if (((_bitMatrix$y4 = bitMatrix[_y2]) === null || _bitMatrix$y4 === void 0 ? void 0 : _bitMatrix$y4[_x2 + 1]) === 1 && ((_bitMatrix3 = bitMatrix[_y2 - 1]) === null || _bitMatrix3 === void 0 ? void 0 : _bitMatrix3[_x2]) === 1) {\n              svgPiecesMatrix.push(React.createElement(Path, {\n                rotation: 90,\n                origin: _origin,\n                key: _x2 + \"_\" + _y2 + \"_bottomRight\",\n                d: _d\n              }));\n            }\n            if (((_bitMatrix$y5 = bitMatrix[_y2]) === null || _bitMatrix$y5 === void 0 ? void 0 : _bitMatrix$y5[_x2 + 1]) === 1 && ((_bitMatrix4 = bitMatrix[_y2 + 1]) === null || _bitMatrix4 === void 0 ? void 0 : _bitMatrix4[_x2]) === 1) {\n              svgPiecesMatrix.push(React.createElement(Path, {\n                rotation: 180,\n                origin: _origin,\n                key: _x2 + \"_\" + _y2 + \"_bottomLeft\",\n                d: _d\n              }));\n            }\n          }\n        }\n      }\n    }\n  }\n  if (outerEyesOptions) {\n    var listPositions = ['topLeft', 'topRight', 'bottomLeft'];\n    var origins = {\n      topLeft: pieceSize * OUTER_EYE_SIZE_IN_BITS / 2 + \", \" + pieceSize * OUTER_EYE_SIZE_IN_BITS / 2,\n      topRight: qrSize - pieceSize * OUTER_EYE_SIZE_IN_BITS / 2 + \", \" + pieceSize * OUTER_EYE_SIZE_IN_BITS / 2,\n      bottomLeft: pieceSize * OUTER_EYE_SIZE_IN_BITS / 2 + \", \" + (qrSize - pieceSize * OUTER_EYE_SIZE_IN_BITS / 2)\n    };\n    listPositions.forEach(function (position) {\n      var _outerEyesOptions$pos2, _outerEyesOptions$pos3, _outerEyesOptions$pos4, _outerEyesOptions$pos5, _outerEyesOptions$pos6, _outerEyesOptions$pos7;\n      var d = getOuterEyePathData(position, pieceSize, qrSize);\n      if (Object.keys(outerEyesOptions).includes(position)) {\n        var _outerEyesOptions$pos;\n        var transformedOuterEyeBorderRadius = transformBorderRadiusToArray((_outerEyesOptions$pos = outerEyesOptions[position]) === null || _outerEyesOptions$pos === void 0 ? void 0 : _outerEyesOptions$pos.borderRadius);\n        if (transformedOuterEyeBorderRadius) {\n          d = getRoundedOuterEyePathData(position, transformedOuterEyeBorderRadius, pieceSize, bitMatrix.length * pieceSize);\n        }\n      }\n      svgPiecesMatrix.push(React.createElement(Path, {\n        fill: outerEyesOptions !== null && outerEyesOptions !== void 0 && (_outerEyesOptions$pos2 = outerEyesOptions[position]) !== null && _outerEyesOptions$pos2 !== void 0 && _outerEyesOptions$pos2.gradient ? \"url(#\" + position + \"OuterEyeGradient)\" : (outerEyesOptions === null || outerEyesOptions === void 0 ? void 0 : (_outerEyesOptions$pos3 = outerEyesOptions[position]) === null || _outerEyesOptions$pos3 === void 0 ? void 0 : _outerEyesOptions$pos3.color) || undefined,\n        fillRule: \"evenodd\",\n        stroke: outerEyesOptions === null || outerEyesOptions === void 0 ? void 0 : (_outerEyesOptions$pos4 = outerEyesOptions[position]) === null || _outerEyesOptions$pos4 === void 0 ? void 0 : _outerEyesOptions$pos4.stroke,\n        strokeWidth: outerEyesOptions === null || outerEyesOptions === void 0 ? void 0 : (_outerEyesOptions$pos5 = outerEyesOptions[position]) === null || _outerEyesOptions$pos5 === void 0 ? void 0 : _outerEyesOptions$pos5.strokeWidth,\n        scale: outerEyesOptions === null || outerEyesOptions === void 0 ? void 0 : (_outerEyesOptions$pos6 = outerEyesOptions[position]) === null || _outerEyesOptions$pos6 === void 0 ? void 0 : _outerEyesOptions$pos6.scale,\n        rotation: outerEyesOptions === null || outerEyesOptions === void 0 ? void 0 : (_outerEyesOptions$pos7 = outerEyesOptions[position]) === null || _outerEyesOptions$pos7 === void 0 ? void 0 : _outerEyesOptions$pos7.rotation,\n        origin: origins[position],\n        key: position + \"OuterEye\",\n        d: d\n      }));\n    });\n  }\n  if (innerEyesOptions) {\n    var _listPositions = ['topLeft', 'topRight', 'bottomLeft'];\n    var _origins = {\n      topLeft: pieceSize * 2 + pieceSize * INNER_EYE_SIZE_IN_BITS / 2 + \", \" + (pieceSize * 2 + pieceSize * INNER_EYE_SIZE_IN_BITS / 2),\n      topRight: qrSize - pieceSize * 2 - pieceSize * INNER_EYE_SIZE_IN_BITS / 2 + \", \" + (pieceSize * 2 + pieceSize * INNER_EYE_SIZE_IN_BITS / 2),\n      bottomLeft: pieceSize * 2 + pieceSize * INNER_EYE_SIZE_IN_BITS / 2 + \", \" + (qrSize - pieceSize * 2 - pieceSize * INNER_EYE_SIZE_IN_BITS / 2)\n    };\n    _listPositions.forEach(function (position) {\n      var _innerEyesOptions$pos2, _innerEyesOptions$pos3, _innerEyesOptions$pos4, _innerEyesOptions$pos5, _innerEyesOptions$pos6, _innerEyesOptions$pos7;\n      var d = getInnerEyePathData(position, pieceSize, bitMatrix.length * pieceSize);\n      if (Object.keys(innerEyesOptions).includes(position)) {\n        var _innerEyesOptions$pos;\n        var transformedInnerEyeBorderRadius = transformBorderRadiusToArray((_innerEyesOptions$pos = innerEyesOptions[position]) === null || _innerEyesOptions$pos === void 0 ? void 0 : _innerEyesOptions$pos.borderRadius);\n        if (transformedInnerEyeBorderRadius) {\n          d = getRoundedInnerEyePathData(position, transformedInnerEyeBorderRadius, pieceSize, bitMatrix.length * pieceSize);\n        }\n      }\n      svgPiecesMatrix.push(React.createElement(Path, {\n        fill: innerEyesOptions !== null && innerEyesOptions !== void 0 && (_innerEyesOptions$pos2 = innerEyesOptions[position]) !== null && _innerEyesOptions$pos2 !== void 0 && _innerEyesOptions$pos2.gradient ? \"url(#\" + position + \"InnerEyeGradient)\" : (innerEyesOptions === null || innerEyesOptions === void 0 ? void 0 : (_innerEyesOptions$pos3 = innerEyesOptions[position]) === null || _innerEyesOptions$pos3 === void 0 ? void 0 : _innerEyesOptions$pos3.color) || undefined,\n        stroke: innerEyesOptions === null || innerEyesOptions === void 0 ? void 0 : (_innerEyesOptions$pos4 = innerEyesOptions[position]) === null || _innerEyesOptions$pos4 === void 0 ? void 0 : _innerEyesOptions$pos4.stroke,\n        strokeWidth: innerEyesOptions === null || innerEyesOptions === void 0 ? void 0 : (_innerEyesOptions$pos5 = innerEyesOptions[position]) === null || _innerEyesOptions$pos5 === void 0 ? void 0 : _innerEyesOptions$pos5.strokeWidth,\n        scale: innerEyesOptions === null || innerEyesOptions === void 0 ? void 0 : (_innerEyesOptions$pos6 = innerEyesOptions[position]) === null || _innerEyesOptions$pos6 === void 0 ? void 0 : _innerEyesOptions$pos6.scale,\n        rotation: innerEyesOptions === null || innerEyesOptions === void 0 ? void 0 : (_innerEyesOptions$pos7 = innerEyesOptions[position]) === null || _innerEyesOptions$pos7 === void 0 ? void 0 : _innerEyesOptions$pos7.rotation,\n        origin: _origins[position],\n        key: position + \"InnerEye\",\n        d: d\n      }));\n    });\n  }\n  return React.createElement(React.Fragment, null, svgPiecesMatrix);\n}","map":{"version":3,"names":["React","Path","INNER_EYE_SIZE_IN_BITS","OUTER_EYE_SIZE_IN_BITS","getInnerEyePathData","getOuterEyePathData","getPieceLiquidPathData","getPieceRoundedSquarePathData","getPieceSquarePathData","getRoundedInnerEyePathData","getRoundedOuterEyePathData","isCoordsOfInnerEyes","isCoordsOfOuterEyes","isLiquidPieceInEyes","transformBorderRadiusToArray","DEFAULT_PIECE_SIZE","SVGPieces","_ref","bitMatrix","_ref$pieceLiquidRadiu","pieceLiquidRadius","pieceBorderRadius","_ref$pieceSize","pieceSize","pieceCornerType","pieceScale","pieceRotation","pieceStroke","pieceStrokeWidth","outerEyesOptions","innerEyesOptions","_ref$isPiecesGlued","isPiecesGlued","renderCustomPieceItem","logoArea","qrSize","length","svgPiecesMatrix","y","x","PieceElement","push","createElement","Fragment","transformedPieceBorderRadius","_bitMatrix$y","_x","_y","width","height","origin","d","size","cornerType","borderRadius","isGlued","isLiquid","PathComponent","scale","rotation","stroke","strokeWidth","key","_bitMatrix$y2","_bitMatrix","_bitMatrix$y3","_bitMatrix2","_bitMatrix$y4","_bitMatrix3","_bitMatrix$y5","_bitMatrix4","listPositions","origins","topLeft","topRight","bottomLeft","forEach","position","_outerEyesOptions$pos2","_outerEyesOptions$pos3","_outerEyesOptions$pos4","_outerEyesOptions$pos5","_outerEyesOptions$pos6","_outerEyesOptions$pos7","Object","keys","includes","_outerEyesOptions$pos","transformedOuterEyeBorderRadius","fill","gradient","color","undefined","fillRule","_innerEyesOptions$pos2","_innerEyesOptions$pos3","_innerEyesOptions$pos4","_innerEyesOptions$pos5","_innerEyesOptions$pos6","_innerEyesOptions$pos7","_innerEyesOptions$pos","transformedInnerEyeBorderRadius"],"sources":["SVGPieces.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}