{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect } from 'react';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport NavigationContainer from '@react-navigation/native/src/NavigationContainer';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Home from \"./screens/Home\";\nimport Login from \"./screens/Login\";\nimport Register from \"./screens/Register\";\nimport Entry from \"./screens/Entry\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { api, checkServerStatus } from \"./api/base\";\nimport { AuthContext } from \"./assets/contexts/AuthContext\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Maintenance } from \"./screens/Maintenance\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _React$useState = React.useState(\"\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    token = _React$useState2[0],\n    setUserToken = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    mall_id = _React$useState4[0],\n    setMallID = _React$useState4[1];\n  var _React$useState5 = React.useState(true),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    serverStatus = _React$useState6[0],\n    setServerStatus = _React$useState6[1];\n  useEffect(function () {\n    var bootstrap = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var userToken;\n        var stat = true;\n        try {\n          userToken = yield SecureStore.getItemAsync('token');\n          stat = yield checkServerStatus();\n        } catch (e) {\n          console.error(e);\n        }\n        setUserToken(userToken);\n        setServerStatus(stat);\n      });\n      return function bootstrap() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    bootstrap();\n  });\n  var setToken = function () {\n    var _ref2 = _asyncToGenerator(function* (token) {\n      console.log(\"Setting token: \" + token);\n      yield SecureStore.setItemAsync('token', token);\n      api.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n      setUserToken(token);\n    });\n    return function setToken(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var getUserID = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var res = yield api.post('/token/getUserID', {\n          token: yield SecureStore.getItemAsync('token')\n        });\n        console.log(res.data);\n        return res.data;\n      } catch (error) {\n        console.error(error);\n        throw new Error('Failed to get user ID. Please try again.');\n      }\n    });\n    return function getUserID() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var login = function () {\n    var _ref4 = _asyncToGenerator(function* (loginRequest) {\n      try {\n        var res = yield api.post('/login/user', loginRequest);\n        yield setToken(res.data.token);\n        return res.data;\n      } catch (error) {\n        console.error(error);\n        throw new Error('Failed to login. Please try again.');\n      }\n    });\n    return function login(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      console.log(\"Logging out\");\n      api.defaults.headers.common[\"Authorization\"] = undefined;\n      yield SecureStore.deleteItemAsync('token');\n      setUserToken(\"\");\n    });\n    return function logout() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var verifyToken = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      var token = yield SecureStore.getItemAsync('token');\n      return yield api.post('/token/verify', {\n        token: token\n      }).then(function (res) {\n        return res.data.success;\n      });\n    });\n    return function verifyToken() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var value = {\n    token: token,\n    setToken: setToken,\n    login: login,\n    logout: logout,\n    verifyToken: verifyToken,\n    getUserID: getUserID\n  };\n  var queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        retry: 1,\n        refetchOnWindowFocus: true,\n        refetchOnMount: true,\n        refetchOnReconnect: true,\n        networkMode: \"online\",\n        suspense: true\n      }\n    }\n  });\n  return _jsx(SafeAreaProvider, {\n    children: _jsx(PaperProvider, {\n      children: _jsx(QueryClientProvider, {\n        client: queryClient,\n        children: _jsx(AuthContext.Provider, {\n          value: value,\n          children: _jsx(NavigationContainer, {\n            children: _jsx(Stack.Navigator, {\n              screenOptions: {\n                headerShown: false\n              },\n              children: !serverStatus ? _jsx(Stack.Screen, {\n                name: \"Maintenance\",\n                component: Maintenance\n              }) : token != \"\" && token != null ? _jsxs(_Fragment, {\n                children: [_jsx(Stack.Screen, {\n                  name: \"Home\",\n                  component: Home\n                }), _jsx(Stack.Screen, {\n                  name: \"Entry\",\n                  component: Entry\n                })]\n              }) : _jsxs(_Fragment, {\n                children: [_jsx(Stack.Screen, {\n                  name: \"Login\",\n                  component: Login\n                }), _jsx(Stack.Screen, {\n                  name: \"Register\",\n                  component: Register\n                })]\n              })\n            })\n          })\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","Provider","PaperProvider","QueryClient","QueryClientProvider","NavigationContainer","createNativeStackNavigator","Home","Login","Register","Entry","SecureStore","api","checkServerStatus","AuthContext","SafeAreaProvider","Maintenance","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Stack","App","_React$useState","useState","_React$useState2","_slicedToArray","token","setUserToken","_React$useState3","_React$useState4","mall_id","setMallID","_React$useState5","_React$useState6","serverStatus","setServerStatus","bootstrap","_ref","_asyncToGenerator","userToken","stat","getItemAsync","e","console","error","apply","arguments","setToken","_ref2","log","setItemAsync","defaults","headers","common","_x","getUserID","_ref3","res","post","data","Error","login","_ref4","loginRequest","_x2","logout","_ref5","undefined","deleteItemAsync","verifyToken","_ref6","then","success","value","queryClient","defaultOptions","queries","retry","refetchOnWindowFocus","refetchOnMount","refetchOnReconnect","networkMode","suspense","children","client","Navigator","screenOptions","headerShown","Screen","name","component"],"sources":["C:/Users/syho0/OneDrive/Desktop/Code/capstone_project_app/App.tsx"],"sourcesContent":["import React, {createContext, useContext, useEffect, useMemo, useReducer, useState} from 'react';\nimport {Text, ActivityIndicator, SafeAreaView, StyleSheet, View} from 'react-native';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport NavigationContainer from '@react-navigation/native/src/NavigationContainer';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Home from './screens/Home'\nimport Login from './screens/Login';\nimport Register from './screens/Register';\nimport Entry from './screens/Entry';\nimport * as SecureStore from \"expo-secure-store\";\nimport {api, checkServerStatus} from \"./api/base\";\nimport {AuthContext} from \"./assets/contexts/AuthContext\";\nimport {\n    SafeAreaProvider,\n} from 'react-native-safe-area-context';\nimport {useGetMalls} from \"./api/malls\";\nimport {Maintenance} from \"./screens/Maintenance\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n    const [token, setUserToken] = React.useState(\"\");\n    const [mall_id, setMallID] = React.useState(0);\n    const [serverStatus, setServerStatus] = React.useState(true);\n\n    useEffect(() => {\n        const bootstrap = async () => {\n            let userToken: any;\n            let stat: boolean = true;\n\n            try {\n                userToken = await SecureStore.getItemAsync('token');\n                stat = await checkServerStatus()\n            } catch (e) {\n                console.error(e);\n            }\n\n            setUserToken(userToken);\n            setServerStatus(stat);\n        };\n\n        bootstrap();\n    });\n\n    const setToken = async (token: string) => {\n        console.log(\"Setting token: \" + token)\n        await SecureStore.setItemAsync('token', token);\n        api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n        setUserToken(token);\n    }\n\n    const getUserID = async () => {\n        try {\n            const res = await api.post('/token/getUserID', {token: await SecureStore.getItemAsync('token')});\n            console.log(res.data);\n            return res.data;\n        } catch (error) {\n            console.error(error);\n            throw new Error('Failed to get user ID. Please try again.');\n        }\n    }\n\n    const login = async (loginRequest: any) => {\n        try {\n            const res = await api.post('/login/user', loginRequest);\n            await setToken(res.data.token);\n            return res.data;\n        } catch (error) {\n            console.error(error);\n            throw new Error('Failed to login. Please try again.');\n        }\n    };\n\n    const logout = async () => {\n        console.log(\"Logging out\");\n        api.defaults.headers.common[\"Authorization\"] = undefined;\n        await SecureStore.deleteItemAsync('token');\n        setUserToken(\"\");\n    };\n\n    const verifyToken = async () => {\n        const token = await SecureStore.getItemAsync('token');\n        return await api.post('/token/verify', {token: token}).then((res) => {\n            return res.data.success;\n        })\n    }\n\n    const value = {\n        token,\n        setToken,\n        login,\n        logout,\n        verifyToken,\n        getUserID\n    }\n\n    const queryClient = new QueryClient({\n        defaultOptions: {\n            queries: {\n                retry: 1,\n                refetchOnWindowFocus: true,\n                refetchOnMount: true,\n                refetchOnReconnect: true,\n                networkMode: \"online\",\n                suspense: true,\n            }\n        }\n    });\n\n    return (\n        <SafeAreaProvider>\n            <PaperProvider>\n                <QueryClientProvider client={queryClient}>\n                    <AuthContext.Provider value={value}>\n                        <NavigationContainer>\n                            <Stack.Navigator screenOptions={{headerShown: false}}>\n                                {\n                                    !serverStatus ? (\n                                        <Stack.Screen name='Maintenance' component={Maintenance} />\n                                    ) : (\n                                        token != \"\" && token != null ?\n                                            (\n                                                <>\n                                                    <Stack.Screen name='Home' component={Home} />\n                                                    <Stack.Screen name='Entry' component={Entry} />\n                                                </>\n                                            )\n                                        :\n                                            (\n                                                <>\n                                                    <Stack.Screen name='Login' component={Login} />\n                                                    <Stack.Screen name='Register' component={Register} />\n                                                </>\n                                            )\n                                    )\n                                }\n                            </Stack.Navigator>\n                        </NavigationContainer>\n                    </AuthContext.Provider>\n                </QueryClientProvider>\n            </PaperProvider>\n        </SafeAreaProvider>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}