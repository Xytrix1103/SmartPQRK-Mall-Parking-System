{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { INNER_EYE_SIZE_IN_BITS, EYES_POSITIONS, OUTER_EYE_SIZE_IN_BITS } from \"./constants\";\nexport function transformBitArrayToMatrix(bitArray, qrCodeSize) {\n  var matrix = [];\n  var row = [];\n  for (var i = 0; i < bitArray.length; i++) {\n    row.push(bitArray[i] || 0);\n    if ((i + 1) % qrCodeSize === 0) {\n      matrix.push(_toConsumableArray(row));\n      row = [];\n    }\n  }\n  return matrix;\n}\nexport function transformBorderRadiusToArray(borderRadius) {\n  if (!borderRadius) {\n    return undefined;\n  }\n  if (Array.isArray(borderRadius)) {\n    return borderRadius.length === 0 ? undefined : borderRadius;\n  }\n  return Array.from({\n    length: 4\n  }, function () {\n    return borderRadius;\n  });\n}\nexport function transformEyeOptionsToCommonPattern(options) {\n  if (!options) {\n    return undefined;\n  }\n  if (Object.keys(options).find(function (key) {\n    return EYES_POSITIONS.includes(key);\n  })) {\n    return options;\n  }\n  return EYES_POSITIONS.reduce(function (res, position) {\n    return _objectSpread(_objectSpread({}, res), {}, _defineProperty({}, position, options));\n  }, {});\n}\nexport function getPieceSquarePathData(x, y, size) {\n  var _x = x * size;\n  var _y = y * size;\n  return \"\\n    M\" + _x + \" \" + _y + \"\\n    \" + (_x + size) + \" \" + _y + \"\\n    \" + (_x + size) + \" \" + (_y + size) + \"\\n    \" + _x + \" \" + (_y + size) + \"\\n    z\\n  \";\n}\nexport function getPieceRoundedSquarePathData(_ref) {\n  var x = _ref.x,\n    y = _ref.y,\n    size = _ref.size,\n    cornerType = _ref.cornerType,\n    borderRadius = _ref.borderRadius,\n    isGlued = _ref.isGlued,\n    isLiquid = _ref.isLiquid,\n    bitMatrix = _ref.bitMatrix;\n  var _x = x * size;\n  var _y = y * size;\n  var isCornerTypeCut = cornerType === 'cut';\n  var _ref2 = borderRadius || [],\n    _ref3 = _slicedToArray(_ref2, 4),\n    _ref3$ = _ref3[0],\n    topLeftR = _ref3$ === void 0 ? 0 : _ref3$,\n    _ref3$2 = _ref3[1],\n    topRightR = _ref3$2 === void 0 ? 0 : _ref3$2,\n    _ref3$3 = _ref3[2],\n    bottomRightR = _ref3$3 === void 0 ? 0 : _ref3$3,\n    _ref3$4 = _ref3[3],\n    bottomLeftR = _ref3$4 === void 0 ? 0 : _ref3$4;\n  var generateArcStart = function generateArcStart(cornerPosition) {\n    return isCornerTypeCut ? 'L' : \"A\" + cornerPosition + \" \" + cornerPosition + \" 0 0 1\";\n  };\n  if (isGlued) {\n    var _bitMatrix$y, _bitMatrix, _bitMatrix$y2, _bitMatrix2;\n    if (((_bitMatrix$y = bitMatrix[y]) === null || _bitMatrix$y === void 0 ? void 0 : _bitMatrix$y[x - 1]) === 1) {\n      topLeftR = 0;\n      bottomLeftR = 0;\n    }\n    if (((_bitMatrix = bitMatrix[y - 1]) === null || _bitMatrix === void 0 ? void 0 : _bitMatrix[x]) === 1) {\n      topLeftR = 0;\n      topRightR = 0;\n    }\n    if (((_bitMatrix$y2 = bitMatrix[y]) === null || _bitMatrix$y2 === void 0 ? void 0 : _bitMatrix$y2[x + 1]) === 1) {\n      topRightR = 0;\n      bottomRightR = 0;\n    }\n    if (((_bitMatrix2 = bitMatrix[y + 1]) === null || _bitMatrix2 === void 0 ? void 0 : _bitMatrix2[x]) === 1) {\n      bottomLeftR = 0;\n      bottomRightR = 0;\n    }\n  }\n  if (isLiquid) {\n    var _bitMatrix3, _bitMatrix4, _bitMatrix5, _bitMatrix6;\n    if (((_bitMatrix3 = bitMatrix[y - 1]) === null || _bitMatrix3 === void 0 ? void 0 : _bitMatrix3[x - 1]) === 1) {\n      topLeftR = 0;\n    }\n    if (((_bitMatrix4 = bitMatrix[y - 1]) === null || _bitMatrix4 === void 0 ? void 0 : _bitMatrix4[x + 1]) === 1) {\n      topRightR = 0;\n    }\n    if (((_bitMatrix5 = bitMatrix[y + 1]) === null || _bitMatrix5 === void 0 ? void 0 : _bitMatrix5[x + 1]) === 1) {\n      bottomRightR = 0;\n    }\n    if (((_bitMatrix6 = bitMatrix[y + 1]) === null || _bitMatrix6 === void 0 ? void 0 : _bitMatrix6[x - 1]) === 1) {\n      bottomLeftR = 0;\n    }\n  }\n  return \"\\n    M\" + _x + \" \" + (_y + topLeftR) + \"\\n    \" + generateArcStart(topLeftR) + \" \" + (_x + topLeftR) + \" \" + _y + \"\\n    L\" + (_x + size - topRightR) + \" \" + _y + \"\\n    \" + generateArcStart(topRightR) + \" \" + (_x + size) + \" \" + (_y + topRightR) + \"\\n    L\" + (_x + size) + \" \" + (_y + size - bottomRightR) + \"\\n    \" + generateArcStart(bottomRightR) + \"  \" + (_x + size - bottomRightR) + \" \" + (_y + size) + \"\\n    L\" + (_x + bottomLeftR) + \" \" + (_y + size) + \"\\n    \" + generateArcStart(bottomLeftR) + \"  \" + _x + \" \" + (_y + size - bottomLeftR) + \"\\n    z\\n  \";\n}\nexport function getPieceLiquidPathData(x, y, size, borderRadius) {\n  var _x = x * size;\n  var _y = y * size;\n  var r = borderRadius > size ? size : borderRadius;\n  return \"\\n      M\" + _x + \" \" + _y + \"\\n      L\" + (_x + r) + \" \" + _y + \"\\n      A\" + r + \" \" + r + \" 0 0 0 \" + _x + \" \" + (_y + r) + \" z\";\n}\nexport function getOuterEyePathData(position, pieceSize, qrSize) {\n  var outerEyeSize = OUTER_EYE_SIZE_IN_BITS * pieceSize;\n  if (position === 'topLeft') {\n    return \"\\n      M0 0\\n      \" + outerEyeSize + \" 0\\n      \" + outerEyeSize + \" \" + outerEyeSize + \"\\n      0 \" + outerEyeSize + \" z\\n      M\" + pieceSize + \" \" + pieceSize + \"\\n      \" + (outerEyeSize - pieceSize) + \" \" + pieceSize + \"\\n      \" + (outerEyeSize - pieceSize) + \" \" + (outerEyeSize - pieceSize) + \"\\n      \" + pieceSize + \" \" + (outerEyeSize - pieceSize) + \" z\\n    \";\n  }\n  if (position === 'topRight') {\n    return \"\\n      M\" + (qrSize - outerEyeSize) + \" 0\\n      \" + qrSize + \" 0\\n      \" + qrSize + \" \" + outerEyeSize + \"\\n      \" + (qrSize - outerEyeSize) + \" \" + outerEyeSize + \" z\\n      M\" + (qrSize - outerEyeSize + pieceSize) + \" \" + pieceSize + \"\\n      \" + (qrSize - pieceSize) + \" \" + pieceSize + \"\\n      \" + (qrSize - pieceSize) + \" \" + (outerEyeSize - pieceSize) + \"\\n      \" + (qrSize - outerEyeSize + pieceSize) + \" \" + (outerEyeSize - pieceSize) + \" z\\n    \";\n  }\n  if (position === 'bottomLeft') {\n    return \"\\n      M0 \" + (qrSize - outerEyeSize) + \"\\n      \" + outerEyeSize + \" \" + (qrSize - outerEyeSize) + \"\\n      \" + outerEyeSize + \" \" + qrSize + \"\\n      0 \" + qrSize + \" z\\n      M\" + pieceSize + \" \" + (qrSize - outerEyeSize + pieceSize) + \"\\n      \" + (outerEyeSize - pieceSize) + \" \" + (qrSize - outerEyeSize + pieceSize) + \"\\n      \" + (outerEyeSize - pieceSize) + \" \" + (qrSize - pieceSize) + \"\\n      \" + pieceSize + \" \" + (qrSize - pieceSize) + \" z\\n    \";\n  }\n  return '';\n}\nexport function getRoundedOuterEyePathData(position, borderRadius, pieceSize, qrSize) {\n  var outerEyeSize = OUTER_EYE_SIZE_IN_BITS * pieceSize;\n  var _ref4 = borderRadius || [],\n    _ref5 = _slicedToArray(_ref4, 4),\n    _ref5$ = _ref5[0],\n    topLeftR = _ref5$ === void 0 ? 0 : _ref5$,\n    _ref5$2 = _ref5[1],\n    topRightR = _ref5$2 === void 0 ? 0 : _ref5$2,\n    _ref5$3 = _ref5[2],\n    bottomRightR = _ref5$3 === void 0 ? 0 : _ref5$3,\n    _ref5$4 = _ref5[3],\n    bottomLeftR = _ref5$4 === void 0 ? 0 : _ref5$4;\n  var topLeftInnerR = pieceSize < topLeftR ? topLeftR - pieceSize : 0;\n  var topRightInnerR = pieceSize < topRightR ? topRightR - pieceSize : 0;\n  var bottomRightInnerR = pieceSize < bottomRightR ? bottomRightR - pieceSize : 0;\n  var bottomLeftInnerR = pieceSize < bottomLeftR ? bottomLeftR - pieceSize : 0;\n  if (position === 'topLeft') {\n    return \"\\n      M0 \" + topLeftR + \"\\n      A\" + topLeftR + \" \" + topLeftR + \" 0 0 1 \" + topLeftR + \" 0\\n      L\" + (outerEyeSize - topRightR) + \" 0\\n      A\" + topRightR + \" \" + topRightR + \" 0 0 1 \" + outerEyeSize + \" \" + topRightR + \"\\n      L\" + outerEyeSize + \" \" + (outerEyeSize - bottomRightR) + \"\\n      A\" + bottomRightR + \" \" + bottomRightR + \" 0 0 1 \" + (outerEyeSize - bottomRightR) + \" \" + outerEyeSize + \"\\n      L\" + bottomLeftR + \" \" + outerEyeSize + \"\\n      \" + (bottomLeftR ? \"A\" + bottomLeftR + \" \" + bottomLeftR + \" 0 0 1 0 \" + (outerEyeSize - bottomLeftR) : '') + \"\\n      z\\n      M\" + pieceSize + \" \" + (pieceSize + topLeftInnerR) + \"\\n      A\" + topLeftInnerR + \" \" + topLeftInnerR + \" 0 0 1 \" + (pieceSize + topLeftInnerR) + \" \" + pieceSize + \"\\n      L\" + (outerEyeSize - pieceSize - topRightInnerR) + \" \" + pieceSize + \"\\n      A\" + topRightInnerR + \" \" + topRightInnerR + \" 0 0 1 \" + (outerEyeSize - pieceSize) + \" \" + (pieceSize + topRightInnerR) + \"\\n      L\" + (outerEyeSize - pieceSize) + \" \" + (outerEyeSize - pieceSize - bottomRightInnerR) + \"\\n      A\" + bottomRightInnerR + \" \" + bottomRightInnerR + \" 0 0 1 \" + (outerEyeSize - pieceSize - bottomRightInnerR) + \" \" + (outerEyeSize - pieceSize) + \"\\n      L\" + (pieceSize + bottomLeftInnerR) + \" \" + (outerEyeSize - pieceSize) + \"\\n      A\" + bottomLeftInnerR + \" \" + bottomLeftInnerR + \" 0 0 1 \" + pieceSize + \" \" + (outerEyeSize - pieceSize - bottomLeftInnerR) + \"\\n      z\\n    \";\n  }\n  if (position === 'topRight') {\n    return \"\\n      M\" + (qrSize - outerEyeSize) + \" \" + topLeftR + \"\\n      \" + (topLeftR ? \"A\" + topLeftR + \" \" + topLeftR + \" 0 0 1 \" + (qrSize - outerEyeSize + topLeftR) + \" 0\" : '') + \"\\n      L\" + (qrSize - topRightR) + \" 0\\n      \" + (topRightR ? \"A\" + topRightR + \" \" + topRightR + \" 0 0 1 \" + qrSize + \" \" + topRightR : '') + \"\\n      L\" + qrSize + \" \" + (outerEyeSize - bottomRightR) + \"\\n      A\" + bottomRightR + \" \" + bottomRightR + \" 0 0 1 \" + (qrSize - bottomRightR) + \" \" + outerEyeSize + \"\\n      L\" + (qrSize - outerEyeSize + bottomLeftR) + \" \" + outerEyeSize + \"\\n      A\" + bottomLeftR + \" \" + bottomLeftR + \" 0 0 1 \" + (qrSize - outerEyeSize) + \" \" + (outerEyeSize - bottomLeftR) + \"\\n      z\\n      M\" + (qrSize - outerEyeSize + pieceSize) + \" \" + (pieceSize + topLeftInnerR) + \"\\n      A\" + topLeftInnerR + \" \" + topLeftInnerR + \" 0 0 1 \" + (qrSize - outerEyeSize + pieceSize + topLeftInnerR) + \" \" + pieceSize + \"\\n      L\" + (qrSize - pieceSize - topRightInnerR) + \" \" + pieceSize + \"\\n      A\" + topRightInnerR + \" \" + topRightInnerR + \" 0 0 1 \" + (qrSize - pieceSize) + \" \" + (pieceSize + topRightInnerR) + \"\\n      L\" + (qrSize - pieceSize) + \" \" + (outerEyeSize - pieceSize - bottomRightInnerR) + \"\\n      A\" + bottomRightInnerR + \" \" + bottomRightInnerR + \" 0 0 1 \" + (qrSize - pieceSize - bottomRightInnerR) + \" \" + (outerEyeSize - pieceSize) + \"\\n      L\" + (qrSize - outerEyeSize + pieceSize + bottomLeftInnerR) + \" \" + (outerEyeSize - pieceSize) + \"\\n      A\" + bottomLeftInnerR + \" \" + bottomLeftInnerR + \" 0 0 1 \" + (qrSize - outerEyeSize + pieceSize) + \" \" + (outerEyeSize - pieceSize - bottomLeftInnerR) + \"\\n      z\\n    \";\n  }\n  if (position === 'bottomLeft') {\n    return \"\\n      M0 \" + (qrSize - outerEyeSize + topLeftR) + \"\\n      A\" + topLeftR + \" \" + topLeftR + \" 0 0 1 \" + topLeftR + \" \" + (qrSize - outerEyeSize) + \"\\n      L\" + (outerEyeSize - topRightR) + \" \" + (qrSize - outerEyeSize) + \"\\n      A\" + topRightR + \" \" + topRightR + \" 0 0 1 \" + outerEyeSize + \" \" + (qrSize - outerEyeSize + topRightR) + \"\\n      L\" + outerEyeSize + \" \" + (qrSize - bottomRightR) + \"\\n      A\" + bottomRightR + \" \" + bottomRightR + \" 0 0 1 \" + (outerEyeSize - bottomRightR) + \" \" + qrSize + \"\\n      L\" + bottomLeftR + \" \" + qrSize + \"\\n      A\" + bottomLeftR + \" \" + bottomLeftR + \" 0 0 1 0 \" + (qrSize - bottomLeftR) + \"\\n      z\\n      M\" + pieceSize + \" \" + (qrSize - outerEyeSize + pieceSize + topLeftInnerR) + \"\\n      A\" + topLeftInnerR + \" \" + topLeftInnerR + \" 0 0 1 \" + (pieceSize + topLeftInnerR) + \" \" + (qrSize - outerEyeSize + pieceSize) + \"\\n      L\" + (outerEyeSize - pieceSize - topRightInnerR) + \" \" + (qrSize - outerEyeSize + pieceSize) + \"\\n      A\" + topRightInnerR + \" \" + topRightInnerR + \" 0 0 1 \" + (outerEyeSize - pieceSize) + \" \" + (qrSize - outerEyeSize + pieceSize + topRightInnerR) + \"\\n      L\" + (outerEyeSize - pieceSize) + \" \" + (qrSize - pieceSize - bottomRightInnerR) + \"\\n      A\" + bottomRightInnerR + \" \" + bottomRightInnerR + \" 0 0 1 \" + (outerEyeSize - pieceSize - bottomRightInnerR) + \" \" + (qrSize - pieceSize) + \"\\n      L\" + (pieceSize + bottomLeftInnerR) + \" \" + (qrSize - pieceSize) + \"\\n      A\" + bottomLeftInnerR + \" \" + bottomLeftInnerR + \" 0 0 1 \" + pieceSize + \" \" + (qrSize - pieceSize - bottomLeftInnerR) + \"\\n      z\\n    \";\n  }\n  return '';\n}\nexport function getInnerEyePathData(position, pieceSize, qrSize) {\n  var outerSize = OUTER_EYE_SIZE_IN_BITS * pieceSize;\n  var innerSize = INNER_EYE_SIZE_IN_BITS * pieceSize;\n  var offset = 2 * pieceSize;\n  if (position === 'topLeft') {\n    return \"\\n      M\" + offset + \" \" + offset + \"\\n      \" + (offset + innerSize) + \" \" + offset + \"\\n      \" + (offset + innerSize) + \" \" + (offset + innerSize) + \"\\n      \" + offset + \" \" + (offset + innerSize) + \" z\\n    \";\n  }\n  if (position === 'topRight') {\n    return \"\\n      M\" + (qrSize - outerSize + offset) + \" \" + offset + \"\\n      \" + (qrSize - offset) + \" \" + offset + \"\\n      \" + (qrSize - offset) + \" \" + (offset + innerSize) + \"\\n      \" + (qrSize - outerSize + offset) + \" \" + (offset + innerSize) + \" z\\n    \";\n  }\n  if (position === 'bottomLeft') {\n    return \"\\n      M\" + offset + \" \" + (qrSize - outerSize + offset) + \"\\n      \" + (offset + innerSize) + \" \" + (qrSize - outerSize + offset) + \"\\n      \" + (offset + innerSize) + \" \" + (qrSize - offset) + \"\\n      \" + offset + \" \" + (qrSize - offset) + \" z\\n    \";\n  }\n  return '';\n}\nexport function getRoundedInnerEyePathData(position, borderRadius, pieceSize, qrSize) {\n  var outerSize = OUTER_EYE_SIZE_IN_BITS * pieceSize;\n  var innerSize = INNER_EYE_SIZE_IN_BITS * pieceSize;\n  var offset = 2 * pieceSize;\n  var _ref6 = borderRadius || [],\n    _ref7 = _slicedToArray(_ref6, 4),\n    _ref7$ = _ref7[0],\n    topLeftR = _ref7$ === void 0 ? 0 : _ref7$,\n    _ref7$2 = _ref7[1],\n    topRightR = _ref7$2 === void 0 ? 0 : _ref7$2,\n    _ref7$3 = _ref7[2],\n    bottomRightR = _ref7$3 === void 0 ? 0 : _ref7$3,\n    _ref7$4 = _ref7[3],\n    bottomLeftR = _ref7$4 === void 0 ? 0 : _ref7$4;\n  if (position === 'topLeft') {\n    return \"\\n      M\" + offset + \" \" + (offset + topLeftR) + \"\\n      A\" + topLeftR + \" \" + topLeftR + \" 0 0 1 \" + (offset + topLeftR) + \" \" + offset + \"\\n      L\" + (offset + innerSize - topRightR) + \" \" + offset + \"\\n      A\" + topRightR + \" \" + topRightR + \" 0 0 1 \" + (offset + innerSize) + \" \" + (offset + topRightR) + \"\\n      L\" + (offset + innerSize) + \" \" + (offset + innerSize - bottomRightR) + \"\\n      A\" + bottomRightR + \" \" + bottomRightR + \" 0 0 1 \" + (offset + innerSize - bottomRightR) + \" \" + (offset + innerSize) + \"\\n      L\" + (offset + bottomLeftR) + \" \" + (offset + innerSize) + \" \\n      A\" + bottomLeftR + \" \" + bottomLeftR + \" 0 0 1 \" + offset + \" \" + (offset + innerSize - bottomLeftR) + \" z\\n    \";\n  }\n  if (position === 'topRight') {\n    return \"\\n      M\" + (qrSize - outerSize + offset) + \" \" + (offset + topLeftR) + \"\\n      A\" + topLeftR + \" \" + topLeftR + \" 0 0 1 \" + (qrSize - outerSize + offset + topLeftR) + \" \" + offset + \"\\n      L\" + (qrSize - offset - topRightR) + \" \" + offset + \"\\n      A\" + topRightR + \" \" + topRightR + \" 0 0 1 \" + (qrSize - offset) + \" \" + (offset + topRightR) + \"\\n      L\" + (qrSize - offset) + \" \" + (offset + innerSize - bottomRightR) + \"\\n      A\" + bottomRightR + \" \" + bottomRightR + \" 0 0 1 \" + (qrSize - offset - bottomRightR) + \" \" + (offset + innerSize) + \"\\n      L\" + (qrSize - outerSize + offset + bottomLeftR) + \" \" + (offset + innerSize) + \" \\n      A\" + bottomLeftR + \" \" + bottomLeftR + \" 0 0 1 \" + (qrSize - outerSize + offset) + \" \" + (offset + innerSize - bottomLeftR) + \" z\\n    \";\n  }\n  if (position === 'bottomLeft') {\n    return \"\\n      M\" + offset + \" \" + (qrSize - outerSize + offset + topLeftR) + \"\\n      A\" + topLeftR + \" \" + topLeftR + \" 0 0 1 \" + (offset + topLeftR) + \" \" + (qrSize - outerSize + offset) + \"\\n      L\" + (offset + innerSize - topRightR) + \" \" + (qrSize - outerSize + offset) + \"\\n      A\" + topRightR + \" \" + topRightR + \" 0 0 1 \" + (offset + innerSize) + \" \" + (qrSize - outerSize + offset + topRightR) + \"\\n      L\" + (offset + innerSize) + \" \" + (qrSize - offset - bottomRightR) + \"\\n      A\" + bottomRightR + \" \" + bottomRightR + \" 0 0 1 \" + (offset + innerSize - bottomRightR) + \" \" + (qrSize - offset) + \"\\n      L\" + (offset + bottomLeftR) + \" \" + (qrSize - offset) + \" \\n      A\" + bottomLeftR + \" \" + bottomLeftR + \" 0 0 1 \" + offset + \" \" + (qrSize - offset - bottomLeftR) + \" z\\n    \";\n  }\n  return '';\n}\nexport function isLiquidPieceInEyes(x, y, qrSize) {\n  return x >= 1 && x < 6 && y >= 1 && y < 6 || x >= qrSize - 6 && x < qrSize && y >= 1 && y < 6 || x >= 1 && x < 6 && y >= qrSize - 6 && y < qrSize;\n}\nexport function isCoordsOfTopLeftOuterEye(x, y) {\n  return x >= 0 && x < OUTER_EYE_SIZE_IN_BITS && y === 0 || x >= 0 && x < OUTER_EYE_SIZE_IN_BITS && y === OUTER_EYE_SIZE_IN_BITS - 1 || y > 0 && y < OUTER_EYE_SIZE_IN_BITS - 1 && x === 0 || y > 0 && y < OUTER_EYE_SIZE_IN_BITS - 1 && x === OUTER_EYE_SIZE_IN_BITS - 1;\n}\nexport function isCoordsOfTopRightOuterEye(x, y, qrSize) {\n  return x >= qrSize - OUTER_EYE_SIZE_IN_BITS && x < qrSize && y === 0 || x >= qrSize - OUTER_EYE_SIZE_IN_BITS && x < qrSize && y === OUTER_EYE_SIZE_IN_BITS - 1 || y > 0 && y < OUTER_EYE_SIZE_IN_BITS - 1 && x === qrSize - OUTER_EYE_SIZE_IN_BITS || y > 0 && y < OUTER_EYE_SIZE_IN_BITS - 1 && x === qrSize - 1;\n}\nexport function isCoordsOfBottomLeftOuterEye(x, y, qrSize) {\n  return x >= 0 && x < OUTER_EYE_SIZE_IN_BITS && y === qrSize - OUTER_EYE_SIZE_IN_BITS || x >= 0 && x < OUTER_EYE_SIZE_IN_BITS && y === qrSize - 1 || y > qrSize - OUTER_EYE_SIZE_IN_BITS && y < qrSize && x === 0 || y > qrSize - OUTER_EYE_SIZE_IN_BITS && y < qrSize && x === OUTER_EYE_SIZE_IN_BITS - 1;\n}\nexport function isCoordsOfOuterEyes(x, y, qrSize) {\n  return isCoordsOfTopLeftOuterEye(x, y) || isCoordsOfTopRightOuterEye(x, y, qrSize) || isCoordsOfBottomLeftOuterEye(x, y, qrSize);\n}\nexport function isCoordsOfTopLeftInnerEye(x, y) {\n  return x >= 2 && x < INNER_EYE_SIZE_IN_BITS + 2 && y >= 2 && y < INNER_EYE_SIZE_IN_BITS + 2;\n}\nexport function isCoordsOfTopRightInnerEye(x, y, qrSize) {\n  return x >= qrSize - OUTER_EYE_SIZE_IN_BITS + 2 && x < qrSize - 2 && y >= 2 && y < INNER_EYE_SIZE_IN_BITS + 2;\n}\nexport function isCoordsOfBottomLeftInnerEye(x, y, qrSize) {\n  return x >= 2 && x < INNER_EYE_SIZE_IN_BITS + 2 && y >= qrSize - OUTER_EYE_SIZE_IN_BITS + 2 && y < qrSize - 2;\n}\nexport function isCoordsOfInnerEyes(x, y, qrSize) {\n  return isCoordsOfTopLeftInnerEye(x, y) || isCoordsOfTopRightInnerEye(x, y, qrSize) || isCoordsOfBottomLeftInnerEye(x, y, qrSize);\n}\nexport function consoleWarn(message) {\n  console.warn('QRCode warning: ' + message);\n}\nexport function consoleError(message) {\n  console.error('QRCode error: ' + message);\n}","map":{"version":3,"names":["INNER_EYE_SIZE_IN_BITS","EYES_POSITIONS","OUTER_EYE_SIZE_IN_BITS","transformBitArrayToMatrix","bitArray","qrCodeSize","matrix","row","i","length","push","_toConsumableArray","transformBorderRadiusToArray","borderRadius","undefined","Array","isArray","from","transformEyeOptionsToCommonPattern","options","Object","keys","find","key","includes","reduce","res","position","_objectSpread","_defineProperty","getPieceSquarePathData","x","y","size","_x","_y","getPieceRoundedSquarePathData","_ref","cornerType","isGlued","isLiquid","bitMatrix","isCornerTypeCut","_ref2","_ref3","_slicedToArray","_ref3$","topLeftR","_ref3$2","topRightR","_ref3$3","bottomRightR","_ref3$4","bottomLeftR","generateArcStart","cornerPosition","_bitMatrix$y","_bitMatrix","_bitMatrix$y2","_bitMatrix2","_bitMatrix3","_bitMatrix4","_bitMatrix5","_bitMatrix6","getPieceLiquidPathData","r","getOuterEyePathData","pieceSize","qrSize","outerEyeSize","getRoundedOuterEyePathData","_ref4","_ref5","_ref5$","_ref5$2","_ref5$3","_ref5$4","topLeftInnerR","topRightInnerR","bottomRightInnerR","bottomLeftInnerR","getInnerEyePathData","outerSize","innerSize","offset","getRoundedInnerEyePathData","_ref6","_ref7","_ref7$","_ref7$2","_ref7$3","_ref7$4","isLiquidPieceInEyes","isCoordsOfTopLeftOuterEye","isCoordsOfTopRightOuterEye","isCoordsOfBottomLeftOuterEye","isCoordsOfOuterEyes","isCoordsOfTopLeftInnerEye","isCoordsOfTopRightInnerEye","isCoordsOfBottomLeftInnerEye","isCoordsOfInnerEyes","consoleWarn","message","console","warn","consoleError","error"],"sources":["C:\\Users\\syho0\\OneDrive\\Desktop\\Code\\capstone_project_app\\node_modules\\react-native-qrcode-styled\\src\\helpers.ts"],"sourcesContent":["import { INNER_EYE_SIZE_IN_BITS, EYES_POSITIONS, OUTER_EYE_SIZE_IN_BITS } from './constants';\nimport type {\n  AllEyesOptions,\n  Bit,\n  BitArray,\n  BitMatrix,\n  BorderRadius,\n  EyeOptions,\n  EyePosition,\n  CornerType,\n} from './types';\n\nexport function transformBitArrayToMatrix(bitArray: BitArray, qrCodeSize: number): BitMatrix {\n  const matrix = [];\n  let row: BitArray = [];\n\n  for (let i: Bit = 0; i < bitArray.length; i++) {\n    row.push(bitArray[i] || 0);\n\n    if ((i + 1) % qrCodeSize === 0) {\n      matrix.push([...row]);\n      row = [];\n    }\n  }\n\n  return matrix;\n}\n\nexport function transformBorderRadiusToArray(borderRadius?: BorderRadius): number[] | undefined {\n  if (!borderRadius) {\n    return undefined;\n  }\n\n  if (Array.isArray(borderRadius)) {\n    return borderRadius.length === 0 ? undefined : borderRadius;\n  }\n\n  return Array.from({ length: 4 }, () => borderRadius);\n}\n\nexport function transformEyeOptionsToCommonPattern(\n  options?: EyeOptions | AllEyesOptions\n): AllEyesOptions | undefined {\n  if (!options) {\n    return undefined;\n  }\n\n  if (Object.keys(options).find((key) => EYES_POSITIONS.includes(key))) {\n    return options as AllEyesOptions;\n  }\n\n  return EYES_POSITIONS.reduce((res, position) => ({ ...res, [position]: options }), {});\n}\n\n// x, y - indexes in matrix\nexport function getPieceSquarePathData(x: number, y: number, size: number): string {\n  const _x = x * size;\n  const _y = y * size;\n\n  return `\n    M${_x} ${_y}\n    ${_x + size} ${_y}\n    ${_x + size} ${_y + size}\n    ${_x} ${_y + size}\n    z\n  `;\n}\n\n// x, y - indexes in matrix\nexport function getPieceRoundedSquarePathData({\n  x,\n  y,\n  size,\n  cornerType,\n  borderRadius,\n  isGlued,\n  isLiquid,\n  bitMatrix,\n}: {\n  x: number;\n  y: number;\n  size: number;\n  cornerType?: CornerType;\n  borderRadius?: number[];\n  isGlued?: boolean;\n  isLiquid?: boolean;\n  bitMatrix: BitMatrix;\n}): string {\n  const _x = x * size;\n  const _y = y * size;\n  const isCornerTypeCut = cornerType === 'cut';\n  let [topLeftR = 0, topRightR = 0, bottomRightR = 0, bottomLeftR = 0] = borderRadius || [];\n\n  const generateArcStart = (cornerPosition: number) =>\n    isCornerTypeCut ? 'L' : `A${cornerPosition} ${cornerPosition} 0 0 1`;\n\n  // check for surrounding pieces & remove related corner border radius\n  if (isGlued) {\n    if (bitMatrix[y]?.[x - 1] === 1) {\n      topLeftR = 0;\n      bottomLeftR = 0;\n    }\n    if (bitMatrix[y - 1]?.[x] === 1) {\n      topLeftR = 0;\n      topRightR = 0;\n    }\n    if (bitMatrix[y]?.[x + 1] === 1) {\n      topRightR = 0;\n      bottomRightR = 0;\n    }\n    if (bitMatrix[y + 1]?.[x] === 1) {\n      bottomLeftR = 0;\n      bottomRightR = 0;\n    }\n  }\n\n  if (isLiquid) {\n    if (bitMatrix[y - 1]?.[x - 1] === 1) {\n      topLeftR = 0;\n    }\n    if (bitMatrix[y - 1]?.[x + 1] === 1) {\n      topRightR = 0;\n    }\n    if (bitMatrix[y + 1]?.[x + 1] === 1) {\n      bottomRightR = 0;\n    }\n    if (bitMatrix[y + 1]?.[x - 1] === 1) {\n      bottomLeftR = 0;\n    }\n  }\n\n  // render svg if we have list of different border radius\n  return `\n    M${_x} ${_y + topLeftR}\n    ${generateArcStart(topLeftR)} ${_x + topLeftR} ${_y}\n    L${_x + size - topRightR} ${_y}\n    ${generateArcStart(topRightR)} ${_x + size} ${_y + topRightR}\n    L${_x + size} ${_y + size - bottomRightR}\n    ${generateArcStart(bottomRightR)}  ${_x + size - bottomRightR} ${_y + size}\n    L${_x + bottomLeftR} ${_y + size}\n    ${generateArcStart(bottomLeftR)}  ${_x} ${_y + size - bottomLeftR}\n    z\n  `;\n}\n\nexport function getPieceLiquidPathData(\n  x: number,\n  y: number,\n  size: number,\n  borderRadius: number\n): string {\n  const _x = x * size;\n  const _y = y * size;\n  const r = borderRadius > size ? size : borderRadius;\n\n  return `\n      M${_x} ${_y}\n      L${_x + r} ${_y}\n      A${r} ${r} 0 0 0 ${_x} ${_y + r} z`;\n}\n\nexport function getOuterEyePathData(\n  position: EyePosition,\n  pieceSize: number,\n  qrSize: number\n): string {\n  const outerEyeSize = OUTER_EYE_SIZE_IN_BITS * pieceSize;\n\n  if (position === 'topLeft') {\n    return `\n      M0 0\n      ${outerEyeSize} 0\n      ${outerEyeSize} ${outerEyeSize}\n      0 ${outerEyeSize} z\n      M${pieceSize} ${pieceSize}\n      ${outerEyeSize - pieceSize} ${pieceSize}\n      ${outerEyeSize - pieceSize} ${outerEyeSize - pieceSize}\n      ${pieceSize} ${outerEyeSize - pieceSize} z\n    `;\n  }\n\n  if (position === 'topRight') {\n    return `\n      M${qrSize - outerEyeSize} 0\n      ${qrSize} 0\n      ${qrSize} ${outerEyeSize}\n      ${qrSize - outerEyeSize} ${outerEyeSize} z\n      M${qrSize - outerEyeSize + pieceSize} ${pieceSize}\n      ${qrSize - pieceSize} ${pieceSize}\n      ${qrSize - pieceSize} ${outerEyeSize - pieceSize}\n      ${qrSize - outerEyeSize + pieceSize} ${outerEyeSize - pieceSize} z\n    `;\n  }\n\n  if (position === 'bottomLeft') {\n    return `\n      M0 ${qrSize - outerEyeSize}\n      ${outerEyeSize} ${qrSize - outerEyeSize}\n      ${outerEyeSize} ${qrSize}\n      0 ${qrSize} z\n      M${pieceSize} ${qrSize - outerEyeSize + pieceSize}\n      ${outerEyeSize - pieceSize} ${qrSize - outerEyeSize + pieceSize}\n      ${outerEyeSize - pieceSize} ${qrSize - pieceSize}\n      ${pieceSize} ${qrSize - pieceSize} z\n    `;\n  }\n\n  return '';\n}\n\nexport function getRoundedOuterEyePathData(\n  position: EyePosition,\n  borderRadius: number[],\n  pieceSize: number,\n  qrSize: number\n): string {\n  const outerEyeSize = OUTER_EYE_SIZE_IN_BITS * pieceSize;\n  let [topLeftR = 0, topRightR = 0, bottomRightR = 0, bottomLeftR = 0] = borderRadius || [];\n  let topLeftInnerR = pieceSize < topLeftR ? topLeftR - pieceSize : 0;\n  let topRightInnerR = pieceSize < topRightR ? topRightR - pieceSize : 0;\n  let bottomRightInnerR = pieceSize < bottomRightR ? bottomRightR - pieceSize : 0;\n  let bottomLeftInnerR = pieceSize < bottomLeftR ? bottomLeftR - pieceSize : 0;\n\n  if (position === 'topLeft') {\n    return `\n      M0 ${topLeftR}\n      A${topLeftR} ${topLeftR} 0 0 1 ${topLeftR} 0\n      L${outerEyeSize - topRightR} 0\n      A${topRightR} ${topRightR} 0 0 1 ${outerEyeSize} ${topRightR}\n      L${outerEyeSize} ${outerEyeSize - bottomRightR}\n      A${bottomRightR} ${bottomRightR} 0 0 1 ${outerEyeSize - bottomRightR} ${outerEyeSize}\n      L${bottomLeftR} ${outerEyeSize}\n      ${bottomLeftR ? `A${bottomLeftR} ${bottomLeftR} 0 0 1 0 ${outerEyeSize - bottomLeftR}` : ''}\n      z\n      M${pieceSize} ${pieceSize + topLeftInnerR}\n      A${topLeftInnerR} ${topLeftInnerR} 0 0 1 ${pieceSize + topLeftInnerR} ${pieceSize}\n      L${outerEyeSize - pieceSize - topRightInnerR} ${pieceSize}\n      A${topRightInnerR} ${topRightInnerR} 0 0 1 ${outerEyeSize - pieceSize} ${\n      pieceSize + topRightInnerR\n    }\n      L${outerEyeSize - pieceSize} ${outerEyeSize - pieceSize - bottomRightInnerR}\n      A${bottomRightInnerR} ${bottomRightInnerR} 0 0 1 ${\n      outerEyeSize - pieceSize - bottomRightInnerR\n    } ${outerEyeSize - pieceSize}\n      L${pieceSize + bottomLeftInnerR} ${outerEyeSize - pieceSize}\n      A${bottomLeftInnerR} ${bottomLeftInnerR} 0 0 1 ${pieceSize} ${\n      outerEyeSize - pieceSize - bottomLeftInnerR\n    }\n      z\n    `;\n  }\n\n  if (position === 'topRight') {\n    return `\n      M${qrSize - outerEyeSize} ${topLeftR}\n      ${topLeftR ? `A${topLeftR} ${topLeftR} 0 0 1 ${qrSize - outerEyeSize + topLeftR} 0` : ''}\n      L${qrSize - topRightR} 0\n      ${topRightR ? `A${topRightR} ${topRightR} 0 0 1 ${qrSize} ${topRightR}` : ''}\n      L${qrSize} ${outerEyeSize - bottomRightR}\n      A${bottomRightR} ${bottomRightR} 0 0 1 ${qrSize - bottomRightR} ${outerEyeSize}\n      L${qrSize - outerEyeSize + bottomLeftR} ${outerEyeSize}\n      A${bottomLeftR} ${bottomLeftR} 0 0 1 ${qrSize - outerEyeSize} ${outerEyeSize - bottomLeftR}\n      z\n      M${qrSize - outerEyeSize + pieceSize} ${pieceSize + topLeftInnerR}\n      A${topLeftInnerR} ${topLeftInnerR} 0 0 1 ${\n      qrSize - outerEyeSize + pieceSize + topLeftInnerR\n    } ${pieceSize}\n      L${qrSize - pieceSize - topRightInnerR} ${pieceSize}\n      A${topRightInnerR} ${topRightInnerR} 0 0 1 ${qrSize - pieceSize} ${pieceSize + topRightInnerR}\n      L${qrSize - pieceSize} ${outerEyeSize - pieceSize - bottomRightInnerR}\n      A${bottomRightInnerR} ${bottomRightInnerR} 0 0 1 ${qrSize - pieceSize - bottomRightInnerR} ${\n      outerEyeSize - pieceSize\n    }\n      L${qrSize - outerEyeSize + pieceSize + bottomLeftInnerR} ${outerEyeSize - pieceSize}\n      A${bottomLeftInnerR} ${bottomLeftInnerR} 0 0 1 ${qrSize - outerEyeSize + pieceSize} ${\n      outerEyeSize - pieceSize - bottomLeftInnerR\n    }\n      z\n    `;\n  }\n\n  if (position === 'bottomLeft') {\n    return `\n      M0 ${qrSize - outerEyeSize + topLeftR}\n      A${topLeftR} ${topLeftR} 0 0 1 ${topLeftR} ${qrSize - outerEyeSize}\n      L${outerEyeSize - topRightR} ${qrSize - outerEyeSize}\n      A${topRightR} ${topRightR} 0 0 1 ${outerEyeSize} ${qrSize - outerEyeSize + topRightR}\n      L${outerEyeSize} ${qrSize - bottomRightR}\n      A${bottomRightR} ${bottomRightR} 0 0 1 ${outerEyeSize - bottomRightR} ${qrSize}\n      L${bottomLeftR} ${qrSize}\n      A${bottomLeftR} ${bottomLeftR} 0 0 1 0 ${qrSize - bottomLeftR}\n      z\n      M${pieceSize} ${qrSize - outerEyeSize + pieceSize + topLeftInnerR}\n      A${topLeftInnerR} ${topLeftInnerR} 0 0 1 ${pieceSize + topLeftInnerR} ${\n      qrSize - outerEyeSize + pieceSize\n    }\n      L${outerEyeSize - pieceSize - topRightInnerR} ${qrSize - outerEyeSize + pieceSize}\n      A${topRightInnerR} ${topRightInnerR} 0 0 1 ${outerEyeSize - pieceSize} ${\n      qrSize - outerEyeSize + pieceSize + topRightInnerR\n    }\n      L${outerEyeSize - pieceSize} ${qrSize - pieceSize - bottomRightInnerR}\n      A${bottomRightInnerR} ${bottomRightInnerR} 0 0 1 ${\n      outerEyeSize - pieceSize - bottomRightInnerR\n    } ${qrSize - pieceSize}\n      L${pieceSize + bottomLeftInnerR} ${qrSize - pieceSize}\n      A${bottomLeftInnerR} ${bottomLeftInnerR} 0 0 1 ${pieceSize} ${\n      qrSize - pieceSize - bottomLeftInnerR\n    }\n      z\n    `;\n  }\n\n  return '';\n}\n\nexport function getInnerEyePathData(\n  position: EyePosition,\n  pieceSize: number,\n  qrSize: number\n): string {\n  const outerSize = OUTER_EYE_SIZE_IN_BITS * pieceSize;\n  const innerSize = INNER_EYE_SIZE_IN_BITS * pieceSize;\n  const offset = 2 * pieceSize;\n\n  if (position === 'topLeft') {\n    return `\n      M${offset} ${offset}\n      ${offset + innerSize} ${offset}\n      ${offset + innerSize} ${offset + innerSize}\n      ${offset} ${offset + innerSize} z\n    `;\n  }\n\n  if (position === 'topRight') {\n    return `\n      M${qrSize - outerSize + offset} ${offset}\n      ${qrSize - offset} ${offset}\n      ${qrSize - offset} ${offset + innerSize}\n      ${qrSize - outerSize + offset} ${offset + innerSize} z\n    `;\n  }\n\n  if (position === 'bottomLeft') {\n    return `\n      M${offset} ${qrSize - outerSize + offset}\n      ${offset + innerSize} ${qrSize - outerSize + offset}\n      ${offset + innerSize} ${qrSize - offset}\n      ${offset} ${qrSize - offset} z\n    `;\n  }\n\n  return '';\n}\n\nexport function getRoundedInnerEyePathData(\n  position: EyePosition,\n  borderRadius: number[],\n  pieceSize: number,\n  qrSize: number\n): string {\n  const outerSize = OUTER_EYE_SIZE_IN_BITS * pieceSize;\n  const innerSize = INNER_EYE_SIZE_IN_BITS * pieceSize;\n  const offset = 2 * pieceSize;\n  const [topLeftR = 0, topRightR = 0, bottomRightR = 0, bottomLeftR = 0] = borderRadius || [];\n\n  if (position === 'topLeft') {\n    return `\n      M${offset} ${offset + topLeftR}\n      A${topLeftR} ${topLeftR} 0 0 1 ${offset + topLeftR} ${offset}\n      L${offset + innerSize - topRightR} ${offset}\n      A${topRightR} ${topRightR} 0 0 1 ${offset + innerSize} ${offset + topRightR}\n      L${offset + innerSize} ${offset + innerSize - bottomRightR}\n      A${bottomRightR} ${bottomRightR} 0 0 1 ${offset + innerSize - bottomRightR} ${\n      offset + innerSize\n    }\n      L${offset + bottomLeftR} ${offset + innerSize} \n      A${bottomLeftR} ${bottomLeftR} 0 0 1 ${offset} ${offset + innerSize - bottomLeftR} z\n    `;\n  }\n\n  if (position === 'topRight') {\n    return `\n      M${qrSize - outerSize + offset} ${offset + topLeftR}\n      A${topLeftR} ${topLeftR} 0 0 1 ${qrSize - outerSize + offset + topLeftR} ${offset}\n      L${qrSize - offset - topRightR} ${offset}\n      A${topRightR} ${topRightR} 0 0 1 ${qrSize - offset} ${offset + topRightR}\n      L${qrSize - offset} ${offset + innerSize - bottomRightR}\n      A${bottomRightR} ${bottomRightR} 0 0 1 ${qrSize - offset - bottomRightR} ${offset + innerSize}\n      L${qrSize - outerSize + offset + bottomLeftR} ${offset + innerSize} \n      A${bottomLeftR} ${bottomLeftR} 0 0 1 ${qrSize - outerSize + offset} ${\n      offset + innerSize - bottomLeftR\n    } z\n    `;\n  }\n\n  if (position === 'bottomLeft') {\n    return `\n      M${offset} ${qrSize - outerSize + offset + topLeftR}\n      A${topLeftR} ${topLeftR} 0 0 1 ${offset + topLeftR} ${qrSize - outerSize + offset}\n      L${offset + innerSize - topRightR} ${qrSize - outerSize + offset}\n      A${topRightR} ${topRightR} 0 0 1 ${offset + innerSize} ${\n      qrSize - outerSize + offset + topRightR\n    }\n      L${offset + innerSize} ${qrSize - offset - bottomRightR}\n      A${bottomRightR} ${bottomRightR} 0 0 1 ${offset + innerSize - bottomRightR} ${qrSize - offset}\n      L${offset + bottomLeftR} ${qrSize - offset} \n      A${bottomLeftR} ${bottomLeftR} 0 0 1 ${offset} ${qrSize - offset - bottomLeftR} z\n    `;\n  }\n\n  return '';\n}\n\nexport function isLiquidPieceInEyes(x: number, y: number, qrSize: number): boolean {\n  return (\n    // top left square\n    (x >= 1 && x < 6 && y >= 1 && y < 6) ||\n    // top right square\n    (x >= qrSize - 6 && x < qrSize && y >= 1 && y < 6) ||\n    // bottom left square\n    (x >= 1 && x < 6 && y >= qrSize - 6 && y < qrSize)\n  );\n}\n\nexport function isCoordsOfTopLeftOuterEye(x: number, y: number): boolean {\n  return (\n    (x >= 0 && x < OUTER_EYE_SIZE_IN_BITS && y === 0) ||\n    (x >= 0 && x < OUTER_EYE_SIZE_IN_BITS && y === OUTER_EYE_SIZE_IN_BITS - 1) ||\n    (y > 0 && y < OUTER_EYE_SIZE_IN_BITS - 1 && x === 0) ||\n    (y > 0 && y < OUTER_EYE_SIZE_IN_BITS - 1 && x === OUTER_EYE_SIZE_IN_BITS - 1)\n  );\n}\n\nexport function isCoordsOfTopRightOuterEye(x: number, y: number, qrSize: number): boolean {\n  return (\n    (x >= qrSize - OUTER_EYE_SIZE_IN_BITS && x < qrSize && y === 0) ||\n    (x >= qrSize - OUTER_EYE_SIZE_IN_BITS && x < qrSize && y === OUTER_EYE_SIZE_IN_BITS - 1) ||\n    (y > 0 && y < OUTER_EYE_SIZE_IN_BITS - 1 && x === qrSize - OUTER_EYE_SIZE_IN_BITS) ||\n    (y > 0 && y < OUTER_EYE_SIZE_IN_BITS - 1 && x === qrSize - 1)\n  );\n}\n\nexport function isCoordsOfBottomLeftOuterEye(x: number, y: number, qrSize: number): boolean {\n  return (\n    (x >= 0 && x < OUTER_EYE_SIZE_IN_BITS && y === qrSize - OUTER_EYE_SIZE_IN_BITS) ||\n    (x >= 0 && x < OUTER_EYE_SIZE_IN_BITS && y === qrSize - 1) ||\n    (y > qrSize - OUTER_EYE_SIZE_IN_BITS && y < qrSize && x === 0) ||\n    (y > qrSize - OUTER_EYE_SIZE_IN_BITS && y < qrSize && x === OUTER_EYE_SIZE_IN_BITS - 1)\n  );\n}\n\n// x, y is amount of matrix bits\nexport function isCoordsOfOuterEyes(x: number, y: number, qrSize: number): boolean {\n  return (\n    // top left square\n    isCoordsOfTopLeftOuterEye(x, y) ||\n    // top right square\n    isCoordsOfTopRightOuterEye(x, y, qrSize) ||\n    // bottom left square\n    isCoordsOfBottomLeftOuterEye(x, y, qrSize)\n  );\n}\n\nexport function isCoordsOfTopLeftInnerEye(x: number, y: number): boolean {\n  return x >= 2 && x < INNER_EYE_SIZE_IN_BITS + 2 && y >= 2 && y < INNER_EYE_SIZE_IN_BITS + 2;\n}\n\nexport function isCoordsOfTopRightInnerEye(x: number, y: number, qrSize: number): boolean {\n  return (\n    x >= qrSize - OUTER_EYE_SIZE_IN_BITS + 2 &&\n    x < qrSize - 2 &&\n    y >= 2 &&\n    y < INNER_EYE_SIZE_IN_BITS + 2\n  );\n}\n\nexport function isCoordsOfBottomLeftInnerEye(x: number, y: number, qrSize: number): boolean {\n  return (\n    x >= 2 &&\n    x < INNER_EYE_SIZE_IN_BITS + 2 &&\n    y >= qrSize - OUTER_EYE_SIZE_IN_BITS + 2 &&\n    y < qrSize - 2\n  );\n}\n\n// x, y is amount of matrix bits\nexport function isCoordsOfInnerEyes(x: number, y: number, qrSize: number): boolean {\n  return (\n    // top left square\n    isCoordsOfTopLeftInnerEye(x, y) ||\n    // top right square\n    isCoordsOfTopRightInnerEye(x, y, qrSize) ||\n    // bottom left square\n    isCoordsOfBottomLeftInnerEye(x, y, qrSize)\n  );\n}\n\nexport function consoleWarn(message: string | unknown) {\n  console.warn('QRCode warning: ' + message);\n}\n\nexport function consoleError(message: string | unknown) {\n  console.error('QRCode error: ' + message);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}